Hero:
const [activeId, setActiveId] = useSate<number | null>(null);

const HandleClick = {taskId : number} => {
    setActiveId(activeId === taskId ? null : taskId)
}
{tasks.map((task) =>
    <div>
    <Card 
        task={task}
        key = {task.id}
        isActive = {activeId === task.id}
        HandleClick = (() => HandleClick(task.id))>
 </div>)}
Card:
    type taskprop = {
        isActive: boolean;
        HandleClick : () => void;
    }

    <div className=`displays {isActive ? 'bg-click : 'bg-normal'}`
    onClick = {HandleClick}>

const handletoggle (taskId: number) => {
    setTasks(prevTasks => {prevTasks.map(task => {
        task.id === taskId ?  {...task, completed : task.completed} : task
    })})
};

   